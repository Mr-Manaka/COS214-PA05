<cfg>
  <style>
    <!-- Naming Standards -->
    <check id="*">
      <pattern>^([A-Z]+[A-Za-z0-9]*|[a-z][a-zA-Z0-9]*[a-z0-9])$</pattern>
      <message>Use camelCase for variable and function names (e.g., 'myVariable', 'calculateValue()').</message>
    </check>

    <check id="*">
      <pattern>^[A-Z][A-Za-z0-9]*$</pattern>
      <message>Use PascalCase for class and type names (e.g., 'MyClass', 'MyStruct').</message>
    </check>

    <check id="*">
      <pattern>^[A-Z0-9_]+$</pattern>
      <message>Use UPPERCASE for constants (e.g. 'MAX_VALUE').</message>
    </check>

    <check id="*">
      <pattern>^m_[a-z][a-zA-Z0-9]*$</pattern>
      <message>Prefix member variables with 'm_' (e.g., 'm_memberVariable').</message>
    </check>

    <!-- Format Standards -->
    <check id="*">
      <pattern>^[^\n\r]{80,}$</pattern>
      <message>Keep lines under 80 characters in length.</message>
    </check>

    <check id="*">
      <pattern>^[^\n\r]{120,}$</pattern>
      <message>Keep lines under 120 characters in length.</message>
    </check>

    <check id="*">
      <pattern>^.*\{[^}]*\}.*$</pattern>
      <message>Consistently use curly brackets ({}) to define code blocks, even for single statements.</message>
    </check>
  </style>
</cfg>
